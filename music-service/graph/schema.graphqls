type Album {
  id: ID!
  name: String!
  year: Int!
  artist: String!
  genre: String!
  uploader: User!
}

type User {
  id: ID!
  username: String!
}

type Vote {
  pollId: ID!
  albumId: ID!
  userId: ID!
}

type PollAlbum {
  pollId: ID!
  albumId: ID!
  votes: [Vote!]!
}

type Poll {
  id: ID!
  name: String!
  albumVotes: [PollAlbum!]!
}

input NewAlbum {
  name: String!
  artist: String!
  genre: String!
  year: Int!
}

input AlbumSearch {
  name: String!
  artist: String!
}

input NewPoll {
  name: String!
  albums: [NewAlbum!]!
}

input NewVote {
  pollId: ID!
  albumId: ID!
}

type Query {
  getAlbum(input: AlbumSearch!): [Album!]!
  getAllAlbums: [Album!]!
}

type Mutation {
  uploadAlbum(input: NewAlbum!): Album!
  createPoll(input: NewPoll!): Poll!
  voteAlbum(input: NewVote!): Vote!
}
